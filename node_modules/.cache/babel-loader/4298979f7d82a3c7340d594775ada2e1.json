{"ast":null,"code":"var _jsxFileName = \"/home/md/Desktop/chatapp/frontend/src/pages/DashboardPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashboardPage = () => {\n  _s();\n\n  const [chatrooms, setChatrooms] = React.useState([]);\n\n  const getChatrooms = () => {\n    axios.get(\"http://localhost:8000/chatroom\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\")\n      }\n    }).then(response => {\n      setChatrooms(response.data.chatroom);\n    }).catch(err => {\n      setTimeout(getChatrooms, 8000);\n    });\n  };\n\n  React.useEffect(() => {\n    getChatrooms();\n  }, []);\n  console.log(chatrooms);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardHeader\",\n      children: \"Chatroom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"chatroomName\",\n          children: \"Chatroom Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"chatroomName\",\n          id: \"chatroomName\",\n          placeholder: \"Name of your chatroom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create Chatroom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatrooms\",\n        children: chatrooms.length > 0 && (chatrooms === null || chatrooms === void 0 ? void 0 : chatrooms.map(chatroom => {\n          {\n            console.log(chatrooms);\n          }\n\n          /*#__PURE__*/\n          _jsxDEV(\"div\", {\n            className: \"chatroom\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: chatroom.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/chatroom/\" + chatroom._id,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"join\",\n                children: \"Join\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, chatroom._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this);\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashboardPage, \"P+6xWbp0lEZ22pGZE0VRaJnj8cY=\");\n\n_c = DashboardPage;\nexport default DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["/home/md/Desktop/chatapp/frontend/src/pages/DashboardPage.js"],"names":["React","axios","Link","DashboardPage","chatrooms","setChatrooms","useState","getChatrooms","get","headers","Authorization","localStorage","getItem","then","response","data","chatroom","catch","err","setTimeout","useEffect","console","log","length","map","name","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlC;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzBN,IAAAA,KAAK,CAACO,GAAN,CAAU,gCAAV,EAA4C;AAC1CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,UAArB;AADpB;AADiC,KAA5C,EAIGC,IAJH,CAIQC,QAAQ,IAAI;AAClBT,MAAAA,YAAY,CAACS,QAAQ,CAACC,IAAT,CAAcC,QAAf,CAAZ;AACD,KAND,EAMGC,KANH,CAMSC,GAAG,IAAI;AACdC,MAAAA,UAAU,CAACZ,YAAD,EAAe,IAAf,CAAV;AACD,KARD;AAUD,GAXD;;AAaAP,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpBb,IAAAA,YAAY;AACb,GAFD,EAEG,EAFH;AAIAc,EAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,cAFP;AAGE,UAAA,EAAE,EAAC,cAHL;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAcE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAEGA,SAAS,CAACmB,MAAV,GAAmB,CAAnB,KAAwBnB,SAAxB,aAAwBA,SAAxB,uBAAwBA,SAAS,CAAEoB,GAAX,CAAgBR,QAAD,IAAc;AAChE;AAACK,YAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ;AAAuB;;AACZ;AAAA;AAAwB,YAAA,SAAS,EAAC,UAAlC;AAAA,oCACE;AAAA,wBAAMY,QAAQ,CAACS;AAAf;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAE,eAAeT,QAAQ,CAACU,GAAlC;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,aAAUV,QAAQ,CAACU,GAAnB;AAAA;AAAA;AAAA;AAAA;AAMD,SARwB,CAAxB;AAFH;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAxDD;;GAAMvB,a;;KAAAA,a;AA0DN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\";\n\nconst DashboardPage = () => {\n\n  const [chatrooms, setChatrooms] = React.useState([])\n  const getChatrooms = () => {\n    axios.get(\"http://localhost:8000/chatroom\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\"),\n      },\n    }).then(response => {\n      setChatrooms(response.data.chatroom);\n    }).catch(err => {\n      setTimeout(getChatrooms, 8000)\n    });\n\n  };\n\n  React.useEffect(() => {\n    getChatrooms();\n  }, [])\n\n  console.log(chatrooms)\n  return (\n    <div className=\"card\">\n      <div className=\"cardHeader\">Chatroom</div>\n      <div className=\"cardBody\">\n\n        <div className=\"inputGroup\">\n          <label htmlFor=\"chatroomName\">Chatroom Name</label>\n          <input\n            type=\"text\"\n            name=\"chatroomName\"\n            id=\"chatroomName\"\n            placeholder=\"Name of your chatroom\"\n          />\n        </div>\n\n        <button>Create Chatroom</button>\n\n        <div className=\"chatrooms\">\n\n          {chatrooms.length > 0 && chatrooms?.map((chatroom) => {\n{console.log(chatrooms)}\n            <div key={chatroom._id} className=\"chatroom\">\n              <div>{chatroom.name}</div>\n              <Link to={\"/chatroom/\" + chatroom._id}>\n                <div className=\"join\">Join</div>\n              </Link>\n            </div>\n          }\n          )}\n\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default DashboardPage;"]},"metadata":{},"sourceType":"module"}